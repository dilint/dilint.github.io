<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>install on Wells Blog</title>
    <link>https://dilint.github.io/tags/install/</link>
    <description>Recent content in install on Wells Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Sep 2023 21:00:30 +0800</lastBuildDate><atom:link href="https://dilint.github.io/tags/install/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Set Up Docker</title>
      <link>https://dilint.github.io/posts/set_up_docker/</link>
      <pubDate>Fri, 22 Sep 2023 21:00:30 +0800</pubDate>
      
      <guid>https://dilint.github.io/posts/set_up_docker/</guid>
      <description>个人第一次使用经过：在有基本的容器原理前提下，windows安装后 根据 Flask+Docker 一文尝试未果（命令、墙），然后配置了阿里镜像，看了 命令入门视频,linux安装后部署上最基本web后端（fastapi）。
使用概览 初级 Flask+Docker 1 FastApi+Docker
使用过程 安装 Windows linux
配置国内镜像 国内镜像地址2
阿里云配置指南
阿里云仓库使用 仓库地址
pull push
命令 入门视频 3入门文档 详细介绍 docker-compose实例 删除容器
运行 docker run -p 8000:8000 -t 进入终端 $ sudo docker ps $ sudo docker exec -it 775c7c9ee1e1 /bin/bash 后续使用遇到的问题 命令 docker ps 查看当前运行中的容器docker images 查看镜像列表docker rm container-id 删除指定 id 的容器docker stop/start container-id 停止/启动指定 id 的容器docker rmi image-id 删除指定 id 的镜像docker volume ls 查看 volume 列表docker network ls 查看网络列表sudo docker exec -it container-id /bin/bash 进入容器 Mysql 设置密码 Mysql 常用命令</description>
    </item>
    
    <item>
      <title>Set Up Blog</title>
      <link>https://dilint.github.io/posts/set_up_blog/</link>
      <pubDate>Wed, 20 Sep 2023 13:21:45 +0800</pubDate>
      
      <guid>https://dilint.github.io/posts/set_up_blog/</guid>
      <description>系统：win11
参考内容：
hugo + GitHub Page(win11)
hugo + GitHub Page(mac) &amp;ndash;codesheep
win10结尾crlf是否替代为linux结尾lf
添加数学公式
原理 Hugo Hugo 是一个用 Go 编写的静态网站生成器
Hugo把用户提供的数据文件、i18n 包、配置、布局模板、静态文件，以及用 Markdown 编写的内容，处理并生成一个完整的静态网站。较出色的功能包括多语言支持、图像处理、定制输出格式、短代码等等。而 Hugo 的“嵌套分部”(Nested sections) 功能则可以隔离不同类型的内容，例如一个同时包含博客和播客的网站。
&amp;mdash;&amp;mdash;&amp;ndash;wikipedia
个人使用上，
就是把markdown转换为一个html。
把各个html安装目录组织成目录html。
Github page 联合 </description>
    </item>
    
  </channel>
</rss>
